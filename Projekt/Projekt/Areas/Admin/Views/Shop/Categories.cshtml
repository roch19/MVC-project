@model IEnumerable<Projekt.Models.ViewModels.Shop.CategoryVM>

@{
    ViewBag.Title = "Categories";
}

<h2>Kategorie</h2>

<div class="new-cat">
    <input type="text" id="newcatname" />
    <p>
        <a href="#" id="newcata">Dodaj nową kategorię</a>
        <span class="ajax-text"> </span>
    </p>
</div>

@if (!Model.Any())
{
    <h1 class="text-center">Brak jakichkolwiek kategorii</h1>
}

else
{
    <table class="table sorting" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>

                <td>
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>
}


@section Scripts
    {
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
        $(function () {

            //Add new Category

            var newCatA = $("a#newcata");
            var newCatTextInput = $("#newcatname");
            var ajaxText = $("span.ajax-text");
            var table = $("table#pages tbody");

            newCatTextInput.keyup(function (e) {
                //13 - naciśnięcie ENTER
                if (e.keyCode == 13) {
                    newCatA.click();
                }
            });

            newCatA.click(function (e) {
                e.preventDefault();

                var catName = newCatTextInput.val();

                if (catName.length < 2) {
                    alert("Nazwa kategorii musi posiadać więcej niż 2 znaki.");
                    return false;
                }

                ajaxText.show();

                var url = "/admin/shop/AddNewCategory";

                $.post(url, { catName: catName }, function (data) {
                    var response = data.trim();

                    if (response == "titletaken") {
                        ajaxText.html("<span class='alert alert-danger'>Kategoria o danej nazwie już istnieje!</span>");
                        //setTimeout(function () {
                            //ajaxText.fadeOut("fast", function () {
                            //    ajaxText.html()
                          //  });
                        //}, 2000);
                        return false;
                    }
                    newCatTextInput.val("");

                    var toAppend = $("table#pages tbody tr:last").clone();
                    toAppend.attr("id", "id_" + data);
                    toAppend.find("#item_Name").val(catName);
                    toAppend.find("a.delete").attr("href", "/admin/shop/DeleteCategory/" + data);
                    table.append(toAppend);
                    table.sortable("refresh");

                });
            });


            //Confirm delete page
            $(function () {
                $("a.delete").click(function () {
                    if (!confirm("Potwierdź usunięcie strony ")) return false;
                });
            })


            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#pages tbody").sortable("serialize");
                    var url = "/Admin/Pages/ReorderPages";

                    $.post(url, ids, function (data) {

                    });

                }
            });
        });
    </script>
}